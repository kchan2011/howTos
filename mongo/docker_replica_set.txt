https://towardsdatascience.com/how-to-deploy-a-mongodb-replica-set-using-docker-6d0b9ac00e49

Before creating our mongoDB containers, there is a very important topic that has been long discussed around database persistence in docker containers, and to achieve this challenge what we are going to do is to create a docker volume.

docker volume create --name mongo_storage

Now let’s attached our volume created to start our first mongo container and set the configurations.

docker run --name mongoNode1 \
-v mongo_storage:/data \
-d mongo \
--smallfiles

Create the key file.

Note: The contents of the keyfile serves as the shared password for the members of the replica set. The content of the keyfile must be the same for all members of the replica set.

openssl rand -base64 741 > mongo-keyfile
chmod 600 mongo-keyfile

Next let’s create the folders where is going to hold the data, keyfile and configurations inside the mongo_storage volume:

docker exec mongoNode1 bash -c 'mkdir /data/keyfile /data/admin'

======

#create some admin users, let’s create a admin.js and a replica.js file

docker cp admin.js mongoNode1:/data/admin/

docker cp replica.js mongoNode1:/data/admin/

docker cp mongo-keyfile mongoNode1:/data/keyfile/

#change folder owner to the user container

docker exec mongoNode1 bash -c 'chown -R mongodb:mongodb /data'


==========

Before we start the authenticated mongo container let’s create an env file to set our users and passwords.

MONGO_USER_ADMIN=cristian
MONGO_PASS_ADMIN=cristianPassword2017
MONGO_REPLICA_ADMIN=replicaAdmin
MONGO_PASS_REPLICA=replicaAdminPassword2017

====

#first let's remove our container

docker rm -f mongoNode1

#now lets start our container with authentication 

docker run --name mongoNode1 --hostname mongoNode1 \
-v mongo_storage:/data \
--env-file env \
--add-host manager1:192.168.99.100 \
--add-host worker1:192.168.99.101 \
--add-host worker2:192.168.99.102 \
-p 27017:27017 \
-d mongo --smallfiles \
--keyFile /data/keyfile/mongo-keyfile \
--replSet 'rs1' \
--storageEngine wiredTiger \


Final step for the mongoNode1 container, is to start the replica set, and we are going to do that by running the following command:

docker exec mongoNode1 bash -c 'mongo < /data/admin/replica.js'

# create the admin users with the following command:

docker exec mongoNode1 bash -c 'mongo < /data/admin/admin.js'



--port 27017

